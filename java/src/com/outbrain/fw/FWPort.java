// Automatically generated by flapigen
package com.outbrain.fw;


public final class FWPort {

    public FWPort(FWSession fws) {
        long a0 = fws.mNativeObj;
        mNativeObj = init(a0);
        JNIReachabilityFence.reachabilityFence1(fws);
    }
    private static native long init(long fws);

    public final float learn(FWSession fws, String input_buffer) {
        long a0 = fws.mNativeObj;
        float ret = do_learn(mNativeObj, a0, input_buffer);

        JNIReachabilityFence.reachabilityFence1(fws);

        return ret;
    }
    private static native float do_learn(long self, long fws, String input_buffer);

    public final float predict(FWSession fws, String input_buffer) {
        long a0 = fws.mNativeObj;
        float ret = do_predict(mNativeObj, a0, input_buffer);

        JNIReachabilityFence.reachabilityFence1(fws);

        return ret;
    }
    private static native float do_predict(long self, long fws, String input_buffer);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ FWPort(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}